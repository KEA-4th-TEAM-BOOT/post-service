server:
  port: 8080
  servlet:
    contextPath: /api/v1/post

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      auto-commit: false
      connection-test-query: SELECT 1
      minimum-idle: 10
      maximum-pool-size: 20

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        hbm2ddl.auto: create
    open-in-view: false

volume-path:
  persistent-volume-data: "/usr/src/myapp/files/dev/"
  pod-volume-data: "/usr/src/myapp/tmp/"

logging:
  level:
    org.hibernate.SQL: debug
    org.springframework.data.mongodb: DEBUG


#server:
#  port: 8080
#  servlet:
#    contextPath: /api/v1/post
#
#spring:
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://${DB_URL}/${MYSQL_DATABASE}
#    username: ${MYSQL_ROOT_USER}
#    password: ${MYSQL_ROOT_PASSWORD}
#    hikari:
#      auto-commit: false
#      connection-test-query: SELECT 1
#      minimum-idle: 10
#      maximum-pool-size: 20
#      pool-name: like-pool
#
#  data:
#    mongodb:
#      uri: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_URI}/${MONGODB_DATABASE}
#  servlet:
#    multipart:
#      max-file-size: 100MB
#      max-request-size: 100MB
#
#management:
#  endpoints:
#    prometheus:
#      enabled: true
#    web:
#      exposure:
#        include: prometheus
#  metrics:
#    distribution:
#      percentiles-histogram:
#        http:
#          server:
#            requests: true
#            response:
#              status: true
#      sla:
#        http:
#          server:
#            requests: 100ms,150ms,250ms,500ms,1s
#            response:
#              status: 100ms,150ms,250ms,500ms,1s
#    enable:
#      jvm: true
#      tomcat: true


